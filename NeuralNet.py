import numpy as np
import pandas as pd
import random
pd.set_option('precision',20)
np.set_printoptions(precision=20)
def formMatrix(file):
	data = pd.read_csv(file, header=None, sep = ',')
	df = pd.DataFrame(data = data, dtype = float)
	return df

def sigmoid(x):
	return 1/(1 + np.exp(-x))

def rnnTrain(y, x):
	omega1 = 1.82714641758963#np.random.random_sample()
	omega2 = 1.29683617919041#np.random.random_sample()
	omega3 = 1.90295794384996#np.random.random_sample()
	bias = 1.62258004509679#np.random.random_sample()
	delta = 1.81364975505692#np.random.random_sample()
	alpha1 = 0.895934692106729#np.random.random_sample()
	alpha2 = 0.575198132847073#np.random.random_sample()
	alpha3 = 0.647373191401282#np.random.random_sample()
	beta1 = 0.849376009836358#np.random.random_sample()
	beta2 = 0.330639523425047#np.random.random_sample()
	beta3 = 0.276432025878557#np.random.random_sample()
	gamma1 = 0.594136950883054#np.random.random_sample()
	gamma2 = 0.897439545052275#np.random.random_sample()
	gamma3 = 0.749001372266195#np.random.random_sample()
	omega1hat = 0.229621504925432#np.random.random_sample()
	omega2hat = 0.873200643644267#np.random.random_sample()
	omega3hat = 0.317269648445003#np.random.random_sample()
	bias1 = 0.284407770659363#np.random.random_sample()
	bias2 = 0.986248721135838#np.random.random_sample()
	bias3 = 0.986466722665969#np.random.random_sample()
	lr = 0.22
	
	epoch = 10
	for k in range(epoch):
		for j in range(0, (x.shape[0]) / 26):
			ypredprev = 0
			for i in range (0, 26):
				x[((j*26)+i),0] = (float(x[((j*26)+i),0]))
				x[((j*26)+i),1] = (float(x[((j*26)+i),1]))
				x[((j*26)+i),2] = (float(x[((j*26)+i),2]))
				y[((j*26)+i),0] = (float(y[((j*26)+i),0]))
				s1 = sigmoid(x[((j*26)+i),0] * omega1hat + bias1)
				s2 = sigmoid(x[((j*26)+i),1] * omega2hat + bias2)
				s3 = sigmoid(x[((j*26)+i),2] * omega3hat + bias3)
				g1 = sigmoid(alpha1 * s1 + beta1 * s2 + gamma1 * s3 + bias1)
				g2 = sigmoid(alpha2 * s1 + beta2 * s2 + gamma2 * s3 + bias2)
				g3 = sigmoid(alpha3 * s1 + beta3 * s2 + gamma3 * s3 + bias3)
				h1 = sigmoid(alpha1 * g1 + beta1 * g2 + gamma1 * g3 + bias1)
				h2 = sigmoid(alpha2 * g1 + beta2 * g2 + gamma2 * g3 + bias2)
				h3 = sigmoid(alpha3 * g1 + beta3 * g2 + gamma3 * g3 + bias3)
				o1 = sigmoid(alpha1 * h1 + beta1 * h2 + gamma1 * h3 + bias1)
				o2 = sigmoid(alpha2 * h1 + beta2 * h2 + gamma2 * h3 + bias2)
				o3 = sigmoid(alpha3 * h1 + beta3 * h2 + gamma3 * h3 + bias3)
				ypred = sigmoid(omega1 * o1 + omega2 * o2 + omega3 * o3 + delta * ypredprev + bias)
				ypredprev = ypred
				
				summ1 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * o1
				

				summ2 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * o2
				

				summ3 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * o3
				

				summ4 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * ypredprev
				

				summ5 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred)
				

				summ6 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * h1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * g1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * g1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * g1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s1
				
		
				summ7 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * h2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * g2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * g2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * g2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s2
				

				summ8 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * h3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * g3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * g3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * g3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s3
				

				summ9 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * h1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * g1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * g1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * g1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s1
				

				summ10 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * h2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * g2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * g2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * g2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s2
				

				summ11 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * h3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * g3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * g3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * g3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s3
				

				summ12 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * h1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * g1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * g1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * g1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s1
				

				summ13 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * h2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * g2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * g2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * g2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s2
				

				summ14 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * h3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * g3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * g3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * g3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s3
				

				summ15 = ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1)) * alpha1 * s1 * (1 - s1) * x[((j*26)+i),0] + ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s1) * alpha2 * (1 - s1) * x[((j*26)+i),0] + ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s1) * alpha3 * (1 - s1) * x[((j*26)+i),0]
				

				summ16 = (((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s2) * beta1 * (1 - s2) + ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s2) * beta2 * (1 - s2) + ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s2) * beta3 * (1 - s2)) * x[((j*26)+i),1]
				

				summ17 = (((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s3) * gamma1 * (1 - s3) + ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s3) * gamma2 * (1 - s3) + ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s3) * gamma3 * (1 - s3)) * x[((j*26)+i),2]
				

				summ18 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) + ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1)) * alpha1 * s1 * (1 - s1) + ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s1) * alpha2 * (1 - s1) + ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s1 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s1) * alpha3 * (1 - s1)
				

				summ19 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) + (((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s2) * beta1 * (1 - s2) + ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s2) * beta2 * (1 - s2) + ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s2 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s2) * beta3 * (1 - s2))
				

				summ20 = (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) + (((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * alpha1 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * alpha2 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * alpha3 * g1 * (1 - g1) * s3) * gamma1 * (1 - s3) + ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * beta1 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * beta2 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * beta3 * g2 * (1 - g2) * s3) * gamma2 * (1 - s3) + ((y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * alpha1 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * alpha2 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * alpha3 * h1 * (1 - h1) * gamma1 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * beta1 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * beta2 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * beta3 * h2 * (1 - h2) * gamma2 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega1 * o1 * (1 - o1) * gamma1 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega2 * o2 * (1 - o2) * gamma2 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s3 + (y[((j*26)+i), 0] - ypred) * ypred * (1 - ypred) * omega3 * o3 * (1 - o3) * gamma3 * h3 * (1 - h3) * gamma3 * g3 * (1 - g3) * s3) * gamma3 * (1 - s3))
				inc = 0.02
				omega1 += lr * summ1 * inc
				omega2 += lr * summ2 * inc
				omega3 += lr * summ3 * inc
				delta += lr * summ4 * inc
				bias += lr * summ5 * inc
				alpha1 += lr * summ6 * inc
				beta1 += lr * summ7 * inc
				gamma1 += lr * summ8 * inc
				alpha2 += lr * summ9 * inc
				beta2 += lr * summ10 * inc
				gamma2 += lr * summ11 * inc
				alpha3 += lr * summ12 * inc
				beta3 += lr * summ13 * inc
				gamma3 += lr * summ14 * inc
				omega1hat += lr * summ15
				omega2hat += lr * summ16
				omega3hat += lr * summ17
				bias1 += lr * summ18 * inc
				bias2 += lr * summ19 * inc
				bias3 += lr * summ20 * inc

			#print "error = ", (y[i, 0] - ypred1) ** 2 + (y[i, 1] - ypred2) ** 2 
		print "omega1= ", omega1, ", beta1= ", beta1, ", omega1hat= ", omega1hat, ", alpha1= ", alpha1, ", bias1= ", bias1, ", delta= ", delta
	return [omega1, omega2, omega3, delta, bias, alpha1, alpha2, alpha3, beta1, beta2, beta3, gamma1, gamma2, gamma3, bias1, bias2, bias3, omega1hat, omega2hat, omega3hat]

def rnnTest(y, x, weights):
	ypred = np.zeros_like(y)
	omega1, omega2, omega3, delta, bias, alpha1, alpha2, alpha3, beta1, beta2, beta3, gamma1, gamma2, gamma3, bias1, bias2, bias3, omega1hat, omega2hat, omega3hat = weights
	for j in range(0, (x.shape[0]) / 26):
		ypredprev = 0
		for i in range (0, 26):
			x[((j*26)+i),0] = (float(x[((j*26)+i),0]))
			x[((j*26)+i),1] = (float(x[((j*26)+i),1]))
			x[((j*26)+i),2] = (float(x[((j*26)+i),2]))
			y[((j*26)+i),0] = (float(y[((j*26)+i),0]))
			s1 = sigmoid(x[((j*26)+i),0] * omega1hat + bias1)
			s2 = sigmoid(x[((j*26)+i),1] * omega2hat + bias2)
			s3 = sigmoid(x[((j*26)+i),2] * omega3hat + bias3)
			g1 = sigmoid(alpha1 * s1 + beta1 * s2 + gamma1 * s3 + bias1)
			g2 = sigmoid(alpha2 * s1 + beta2 * s2 + gamma2 * s3 + bias2)
			g3 = sigmoid(alpha3 * s1 + beta3 * s2 + gamma3 * s3 + bias3)
			h1 = sigmoid(alpha1 * g1 + beta1 * g2 + gamma1 * g3 + bias1)
			h2 = sigmoid(alpha2 * g1 + beta2 * g2 + gamma2 * g3 + bias2)
			h3 = sigmoid(alpha3 * g1 + beta3 * g2 + gamma3 * g3 + bias3)
			o1 = sigmoid(alpha1 * h1 + beta1 * h2 + gamma1 * h3 + bias1)
			o2 = sigmoid(alpha2 * h1 + beta2 * h2 + gamma2 * h3 + bias2)
			o3 = sigmoid(alpha3 * h1 + beta3 * h2 + gamma3 * h3 + bias3)
			ypred[((j*26)+i),0] = sigmoid(omega1 * o1 + omega2 * o2 + omega3 * o3 + delta * ypredprev + bias)
			ypredprev = ypred[((j*26)+i),0]
		#print(str(y[((j*26)),0]) + "	" + str(ypred[((j*26)),0]))
	return ((y - ypred)), ypred, y
	
def main():
	df = formMatrix('inputMatrix.csv')
	#print df.head()
	cols = df.shape[1]
	rows = df.shape[0]
	xtrain = df.iloc[0:rows/2, 0:cols-1]
	ytrain = df.iloc[0:rows/2, cols-1:cols]
	xtrain = np.array(xtrain.values)
	ytrain = np.array(ytrain.values)
	#print(ytrain)
	#print(xtrain)
#	[omega1, omega2, omega3, delta, bias, alpha1, alpha2, alpha3, beta1, beta2, beta3, gamma1, gamma2, gamma3, bias1, bias2, bias3, omega1hat, omega2hat, omega3hat]
	weights = np.zeros(20)
	#print(df.iloc[0:rows/2, 1:cols-1])
	weights = rnnTrain(ytrain, xtrain)
	np.savetxt("NeuralWeights.csv", weights, delimiter = ",")
	xtest = df.iloc[rows/2:rows, 0:cols-1]
	ytest = df.iloc[rows/2:rows, cols-1:cols]
	xtest = np.array(xtest.values)
	ytest = np.array(ytest.values)
	accuracy, ypred, yfinal = rnnTest(ytest, xtest, weights)
	np.savetxt("YPredictions.csv", ypred, delimiter = ",")
	#print(accuracy)
	#complete this with post processing of the data.
	
if __name__ == "__main__": main()
